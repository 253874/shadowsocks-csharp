<wpfSpark:SparkWindow xmlns:Views="clr-namespace:Guldan.Views"  x:Class="Guldan.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Guldan" WindowStartupLocation="CenterScreen"
        FontFamily="{StaticResource UIFont}" FontSize="12" 
        xmlns:wpfSpark="clr-namespace:WPFSpark;assembly=WPFSpark"
        xmlns:models="clr-namespace:Guldan.Models"
        xmlns:warlock="clr-namespace:Shadowsocks;assembly=warlock"
        d:DataContext="{d:DesignInstance {x:Type local:MainWindowViewModel}, IsDesignTimeCreatable=True}"
        ResizeMode="CanResize" Icon="Resources/Icons/shadowfucks.ico"
        mc:Ignorable="d" Title="{Binding Title}" Height="500" Width="813">
    <wpfSpark:SparkWindow.Resources>
        <wpfSpark:ContentVisibilityConverter x:Key="ContentVisibilityHelper" />
        <wpfSpark:BooleanToVisibilityConverter x:Key="BooleanToVisibilityHelper" />
        <wpfSpark:BooleanToVisibilityConverter x:Key="BooleanToVisibilityNegationHelper" IsReverse="True" />
        <local:I18N x:Key="i18n" />
    </wpfSpark:SparkWindow.Resources>
    <wpfSpark:SparkWindow.TitleEffect>
        <DropShadowEffect BlurRadius="16" Color="#FFFFFF" Direction="0" ShadowDepth="1" RenderingBias="Quality" />
    </wpfSpark:SparkWindow.TitleEffect>
    <wpfSpark:SparkWindow.TitleImage>
        <Image Source="/Guldan;component/Resources/Icons/shadowfucks.ico" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" />
    </wpfSpark:SparkWindow.TitleImage>
    <Grid x:Name="RootGrid" Background="#DBE6ECF0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="48" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid x:Name="ServersGrid" Grid.Column="1" Visibility="{Binding CurrentAppMode, Converter={StaticResource ContentVisibilityHelper}, ConverterParameter=Servers}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#ff014292" />
            <Grid x:Name="ServerHead" Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="250"
                                  MaxWidth="500"
                                  Width="0.2*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition MinWidth="200"
                                  Width="0.8*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Foreground="White"
                           FontSize="22"
                           Margin="10,9,0,9"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Text="{Binding AppModeTitle}" />
                <StackPanel Grid.Column="0" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Content="Add.Glyph" Width="48" Height="48" Style="{DynamicResource IconGlyph.Light.ButtonStyle}" Command="{Binding CURDCommand}" CommandParameter="c" 
                            ToolTip="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=New}" />
                    <Button Content="Copy.Glyph" Width="48" Height="48" Command="{Binding CURDCommand}" CommandParameter="dup"
                            Style="{DynamicResource IconGlyph.Light.ButtonStyle}" ToolTip="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Duplicate}" />
                    <Button Content="Delete.Glyph" Width="48" Height="48" Command="{Binding CURDCommand}" CommandParameter="d"
                            Style="{DynamicResource IconGlyph.Light.ButtonStyle}" ToolTip="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Delete}" />
                </StackPanel>
                <StackPanel Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal">
                    <!--<Button Content="Save.Glyph" Width="48" Height="48" Style="{DynamicResource IconGlyph.Light.ButtonStyle}" ToolTip="Add New Value" />-->
                </StackPanel>
            </Grid>
            <Grid x:Name="ServerBody" Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="250"
                                      MaxWidth="500"
                                      Width="0.2*" />
                    <ColumnDefinition Width="1" />
                    <ColumnDefinition MinWidth="200"
                                      Width="0.8*" />
                </Grid.ColumnDefinitions>
                <ListBox x:Name="lstServers"
                         Grid.Column="0"
                         ItemsSource="{Binding Servers}"
                         SelectedItem="{Binding SelectedServer}"
                         Margin="0"
                         BorderThickness="0"
                         Padding="0"
                         Background="Transparent"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Style="{DynamicResource ListBox.Light.Style}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Server}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="240">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="10,0,0,0" Text="{Binding Identifier}" VerticalAlignment="Center" />
                                <wpfSpark:SprocketControl Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" TickColor="Black" Visibility="{Binding Busy,Converter={StaticResource BooleanToVisibilityHelper}}"
                                                          Width="30" Height="30" TickWidth="3" TickCount="12" StartAngle="-90" IsIndeterminate="True" Interval="60" LowestAlpha="50" AlphaTicksPercentage="50"
                                                          TickStyle="Triangle" InnerRadius="0.3" OuterRadius="0.5" />
                                <wpfSpark:ToggleSwitch Grid.Column="1" Width="55" Height="30" Visibility="{Binding Busy,Converter={StaticResource BooleanToVisibilityNegationHelper}}" IsEnabled="{Binding Okay,Mode=OneWay}"
                                                       Margin="5" HorizontalAlignment="Right" VerticalAlignment="Top" Command="{Binding StartCommand}" IsChecked="{Binding enabled,Mode=OneWay}"
                                                       Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfSpark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Green.Style}}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <GridSplitter Grid.Row="0" Width="2" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" VerticalAlignment="Stretch" Grid.Column="1" />
                <Grid Grid.Row="0" Grid.Column="2" Background="#77FFFFFF">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="40"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="275"
                                              Width="Auto" />
                            <ColumnDefinition MinWidth="200"
                                              Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Vertical" Margin="0,10,0,10.5" HorizontalAlignment="Left" Width="266">
                            <Views:LabelTextBox Height="25" Margin="5" Header="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Server}" Value="{Binding SelectedServer.server,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <Views:LabelTextBox Height="25" Margin="5" Header="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Port}" Value="{Binding SelectedServer.server_port,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsOnlyDigital="True"/>
                            <Views:LabelTextBox Height="25" Margin="5" Header="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=LocalAddr}" Value="{Binding SelectedServer.local,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <Views:LabelTextBox Height="25" Margin="5" Header="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=LocalPort}" Value="{Binding SelectedServer.local_port,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsOnlyDigital="True"/>
                            <Views:LabelTextBox Height="25" Margin="5" Header="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Password}" Value="{Binding SelectedServer.password,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsPassword="True"/>
                            <Grid Height="25" Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="20"
                                                      Width="0.3*" />
                                    <ColumnDefinition MinWidth="100"
                                                      Width="0.7*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Method}" Grid.Column="0" Margin="1,0,1,0" HorizontalAlignment="Right" VerticalAlignment="Center"  />
                                <ComboBox Grid.Column="1" Margin="1,0,1,0" ItemsSource="{Binding Source={x:Static warlock:Warlock.EncryptorList}}" SelectedItem="{Binding SelectedServer.method,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <Views:LabelTextBox Height="25" Margin="5" Header="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Remark}" Value="{Binding SelectedServer.remarks,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <Grid Height="40" Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="20"
                                                      Width="0.3*" />
                                    <ColumnDefinition MinWidth="100"
                                                      Width="0.7*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=OneTimeAuth}" Grid.Column="0" Margin="1,0,1,0" HorizontalAlignment="Right" VerticalAlignment="Center"  />
                                <StackPanel Orientation="Horizontal" Grid.Column="1">
                                    <wpfSpark:ToggleSwitch Width="55" Height="30"
                                                           Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                           IsChecked="{Binding SelectedServer.auth,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                           Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfSpark:ToggleSwitch, ResourceId=ToggleSwitch.UWP.Light.Style}}" />
                                    <TextBlock Text="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=QRCode}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,1,0" />
                                    <wpfSpark:ToggleSwitch x:Name="SwitchQR" Width="55" Height="30"
                                                           Margin="5" HorizontalAlignment="Right" VerticalAlignment="Top" IsChecked="False"
                                                           Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfSpark:ToggleSwitch, ResourceId=ToggleSwitch.UWP.Light.Style}}" />
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                        <Image Grid.Column="1" Margin="20" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{Binding SelectedServer.QRCode}"  Visibility="{Binding ElementName=SwitchQR,Path=IsChecked,Converter={StaticResource BooleanToVisibilityHelper}}" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <wpfSpark:SprocketControl HorizontalAlignment="Right" VerticalAlignment="Center" TickColor="Black" Visibility="{Binding IsBusy,Converter={StaticResource BooleanToVisibilityHelper}}"
                                                      Width="30" Height="30" TickWidth="3" TickCount="12" StartAngle="-90" IsIndeterminate="True" Interval="60" LowestAlpha="50" AlphaTicksPercentage="50"
                                                      TickStyle="Triangle" InnerRadius="0.3" OuterRadius="0.5" />
                            <Button Width="100" Height="32" Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Save}"
                                    IsDefault="true" FontSize="14" Margin="8,0" Command="{Binding SaveCommand}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="False">
                                                <Setter Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <Grid x:Name="ImportGrid" Grid.Column="1" Visibility="{Binding CurrentAppMode, Converter={StaticResource ContentVisibilityHelper}, ConverterParameter=Import}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"></RowDefinition>
                <RowDefinition Height="48"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="48"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="166"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#ff014292"></Rectangle>
            <TextBlock Grid.Row="0" Grid.Column="0" Foreground="White" FontSize="22" Margin="10,9,0,9" HorizontalAlignment="Left"
                       VerticalAlignment="Center" Text="{Binding AppModeTitle}" />
            <Button x:Name="loadSourceBtn"
                    Grid.Row="1" Grid.Column="0" Width="150" Height="32" Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=SelectFile}"
                    IsDefault="true" FontSize="14" Margin="8,0" HorizontalAlignment="Left" Command="{Binding ImportFileCommand}" CommandParameter="load"></Button>
            <TextBlock Grid.Row="1" Grid.Column="1" FontSize="14" VerticalAlignment="Center"
                       Text="{Binding ImportSource, NotifyOnTargetUpdated=True}" TargetUpdated="OnImportSourceChanged"
                       TextTrimming="CharacterEllipsis" SizeChanged="OnTextSizeChanged" Margin="4,0"></TextBlock>

            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Background="#FFFFFF"></Border>
            <ScrollViewer Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="OnPreviewMouseWheel">
                <StackPanel>
                    <Views:ImportExportSelectionControl x:Name="UserImportCtrl"
                                                           Header="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Import}"
                                                           Data="{Binding ImportItems}"></Views:ImportExportSelectionControl>
                </StackPanel>
            </ScrollViewer>
            <StackPanel Grid.Row="3"
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                
                <Button Width="100"
                        Height="32"
                        Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Import}"
                        IsDefault="true"
                        FontSize="14"
                        Margin="8,0"
                        ToolTip="Don't import anything"
                        Command="{Binding ImportFileCommand}" CommandParameter="import"></Button>
            </StackPanel>
        </Grid>

        <Grid x:Name="ExportGrid" Grid.Column="1" Visibility="{Binding CurrentAppMode, Converter={StaticResource ContentVisibilityHelper}, ConverterParameter=Export}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"></RowDefinition>
                <RowDefinition Height="48"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="48"></RowDefinition>
            </Grid.RowDefinitions>
            <Rectangle HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="#ff014292"></Rectangle>
            <TextBlock Grid.Row="0" Foreground="White" FontSize="22" Margin="10,9,0,9"
                       HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding AppModeTitle}" />
            <Border Grid.Row="1" Background="#CCCCCC"></Border>
            <TextBlock Grid.Row="1" Text="{Binding InitExportStatus}" Margin="8,0" FontFamily="Microsoft Yahei UI Light" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
            <Border Grid.Row="2" Background="#FFFFFF"></Border>
            <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="OnPreviewMouseWheel">
                <StackPanel>
                    <Views:ImportExportSelectionControl x:Name="ExportCtrl" Header="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Export}" 
                                                        Data="{Binding ExportItems}"></Views:ImportExportSelectionControl>
                </StackPanel>
            </ScrollViewer>
            <TextBlock Grid.Row="3"
                       Grid.ColumnSpan="2"
                       Text="{Binding ExportStatus}"
                       Margin="8,0"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"></TextBlock>
            <Button Grid.Row="3" Width="100" Height="32" Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Export}" IsDefault="true"
                    FontSize="14" Margin="8,0" HorizontalAlignment="Right" Command="{Binding ExportCommand}"></Button>
        </Grid>

        <Grid x:Name="AboutGrid"
              Grid.Column="1"
              Visibility="{Binding CurrentAppMode, Converter={StaticResource ContentVisibilityHelper}, ConverterParameter=About}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
                <RowDefinition Height="48" />
            </Grid.RowDefinitions>
            <Rectangle Grid.ColumnSpan="3"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="#ff014292" />
            <TextBlock Grid.Row="0" Foreground="White"
                       FontSize="22"
                       Margin="10,9,0,9"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Text="{Binding AppModeTitle}" />
            <StackPanel Grid.Row="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <Image Source="/Guldan;component/Resources/Images/greatfuckingwall.png"
                       Width="400"
                       Height="128" />
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding CurrVersion}"
                           Margin="120,-25,-60,25"
                           FontSize="18" />
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-10,0,10" FontSize="18">
                    <Run>OS : </Run>
                    <Hyperlink Command="{Binding ExplorerCommand}"
                               CommandParameter="http://www.microsoft.com/en-us/windows">
                        <TextBlock Text="{Binding Source={x:Static system:Environment.OSVersion},Mode=OneTime}" />
                    </Hyperlink>
                    <LineBreak />
                    <Run>.NET : </Run>
                    <Hyperlink Command="{Binding ExplorerCommand}" CommandParameter="https://www.microsoft.com/net">
                        <TextBlock Text="{Binding Source={x:Static system:Environment.Version},Mode=OneTime}" />
                    </Hyperlink>
                    <LineBreak />
                    <Hyperlink Command="{Binding ExplorerCommand}"
                               CommandParameter="https://github.com/shadowsocks/shadowsocks-windows">
                        https://github.com/shadowsocks/shadowsocks-windows
                    </Hyperlink>
                    <LineBreak />
                    <Hyperlink Command="{Binding ExplorerCommand}"
                               CommandParameter="https://github.com/TkYu/shadowsocks-csharp-mod">
                        https://github.com/TkYu/shadowsocks-csharp-mod
                    </Hyperlink>
                    <LineBreak />
                    <Hyperlink Command="{Binding ExplorerCommand}" CommandParameter="http://iivb.net/">http://iivb.net/</Hyperlink>
                </TextBlock>
            </StackPanel>
        </Grid>

        <wpfSpark:FluidProgressBar Grid.ColumnSpan="2" Grid.Column="0" VerticalAlignment="Top" Margin="0,44,0,-44"
                                   Foreground="White" Visibility="{Binding Path=IsBusy, Converter={StaticResource BooleanToVisibilityHelper}}"/>
        <Grid x:Name="SplitViewMenu" ZIndex="4" Grid.ColumnSpan="2" Grid.Column="0" Width="48" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="#F2F2F2">
            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#F2F2F2">
                <RadioButton Style="{StaticResource SplitViewMenuButtonStyle}" Click="OnMenuButtonClicked" BorderThickness="0" Tag="Menu.Glyph" />
                <RadioButton x:Name="ServersButton" Tag="System.Glyph" IsChecked="True" Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Servers}" Checked="OnStackPanelButtonChecked" SnapsToDevicePixels="True" Style="{StaticResource SplitViewNavButtonStyle}" Foreground="Black" BorderThickness="0" />
                <!--<RadioButton x:Name="PacListButton" Tag="PacList.Glyph" Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=PACList}" Checked="OnStackPanelButtonChecked" SnapsToDevicePixels="True" Style="{StaticResource SplitViewNavButtonStyle}" BorderThickness="0" />-->
                <RadioButton x:Name="ImportButton" Tag="Import.Glyph" Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Import}" Checked="OnStackPanelButtonChecked" SnapsToDevicePixels="True" Style="{StaticResource SplitViewNavButtonStyle}" BorderThickness="0" />
                <RadioButton x:Name="ExportButton" Tag="Export.Glyph" Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=Export}" Checked="OnStackPanelButtonChecked" SnapsToDevicePixels="True" Style="{StaticResource SplitViewNavButtonStyle}" BorderThickness="0" />
                <RadioButton x:Name="AboutButton" Tag="About.Glyph" Content="{Binding DummyTitle,Mode=OneTime, Converter={StaticResource i18n}, ConverterParameter=About}" Checked="OnStackPanelButtonChecked" SnapsToDevicePixels="True" Style="{StaticResource SplitViewNavButtonStyle}" BorderThickness="0" />
            </StackPanel>
        </Grid>
    </Grid>
</wpfSpark:SparkWindow>

